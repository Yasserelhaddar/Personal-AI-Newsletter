[project]
name = "personal-ai-newsletter"
version = "0.1.0"
description = "A Personal AI Newsletter Generator that learns your interests, curates content, and sends personalized newsletters"
authors = [
    {name = "Yasser El Haddar", email = "yasserelhaddar@gmail.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "langgraph>=0.2.0",
    "langchain-anthropic>=0.1.0",
    "langchain-core>=0.3.0",
    "jinja2>=3.1.0",
    "aiofiles>=24.1.0",
    "aiohttp>=3.10.0",
    "asyncio-mqtt>=0.16.0",
    "python-crontab>=3.0.0",
    "schedule>=1.2.0",
    "pydantic[email]>=2.8.0",
    "pydantic-settings>=2.4.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.20.0",
    "alembic>=1.13.0",
    "structlog>=24.4.0",
    "typer>=0.12.0",
    "rich>=13.0.0",
    "httpx>=0.27.0",
    "feedparser>=6.0.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=5.3.0",
    "premailer>=3.10.0",
    "python-dotenv>=1.1.1",
    "greenlet>=3.0.0",
    "openai>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "black>=24.8.0",
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pre-commit>=3.8.0",
]

production = [
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "uvicorn[standard]>=0.30.0",
    "gunicorn>=23.0.0",
]

[project.scripts]
newsletter = "src.main:main"
newsletter-setup = "src.setup:setup_main"
newsletter-scheduler = "src.scheduler:scheduler_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
